format_version: 4
pipelines:
  outsystems-demo:
    group: outsystems
    label_template: "${git[:8]}"
    materials:
      git: 
        type: git
        url: https://github.com/OutSystems/outsystems-pipeline.git
        branch: gocd_pipelines
    parameters:
      lifetime_hostname: showcase-lt.outsystemsdevopsexperts.com
      lifetime_api_version: 2
      development_env_label: Development
      regression_env_label: Regression
      acceptance_env_label: Acceptance
      preprod_env_label: Pre-Production
      production_env_label: Production
      os_package_version: 0.5.0
      manifest_folder: manifest_data
      manifest_file: manifest.json
      bdd_test_manager_url: https://showcase-dev.outsystemsdevopsexperts.com/TestManagement_CS
      bdd_test_jobs: demo-reg-job
    secure_variables: 
      lifetime_token: "AES:NfUA0c/gfR0cpeQTFkp62Q==:we0sYna3UUqPgjy0gaiJZ4Yn3YiUMKRiEwc2xDGzAOwbp/IDmm5v0tfji70CXiIaoeJpMOYm97KU/x2wCQwUfnnD26eh5/EFYZrP4Lor1t5wiIAOGCvqBwweTBx+dYfgJfTeQMaJ+PtMn0f8UWS0K4NQA1VyY5mojwgQQIVX48msz43hIfGyPROVjProlPQ7BinJqfR2xkCQ047aumhWuDJUQeLZrg8kblMQB/VOhHY9GLIjcZgx0/oxb7LxX++xzWXViXysqAR3v40fwBPZJjEHAGJ31QVKkPOJFCaDi28pBvIo/3AYPfF0NGt+mG8V5c3y5S+3uHkHwVuPEzLFVpGKhdXbaC5OAjbLx4/pK2cXrh1UTYil5FWTBH9KjuRaEpviui5eL5hkzbpZSe6W5kCRIrzQtN11UDoED1vxG4ZEt6cKfmVrRjOpMLE1YGTt6DUDhLUAs+3mvi6HVoJcq1Q1W64F3HXP9xMFkTbB0SLgZx+tGA/Yq/X0Z/4Qj18NAorC7p5Lzv4bZRJ+Bk9pRhL7yJuXDIF01BbOfOAH5mC8y5uMdN6RTlL+nT5j6UtFynPNPIrZ/mSUSqMj7trWO2BFF14Vq5nO9cQq9KAYQA9zT3y+nOU7AOGTaxhZsngbN881BYxeVPlh53kiuv4DwkQC+ypaU+n04IWrIs6DWy6A234U/URSdEPAFas5yrSdbO/ibmcT3zTXrjx+xzajsO0cB2r1quov6bFoweC51lZWqk5eD/Dn3EgoK+JJmtjS3tFxgQ19lb3UVfcgdUnH+M/7f7R/yuCPeW8D2L2wSSUX2EGo7AhICQmHPCvgrgsXiii3c5b+ByA/ebvQE4asLA=="
    environment_variables:
      manifest: Manifest in JSON format
    stages:

      - setup:
          clean_workspace: true
          jobs:
            publish_trigger_manifest:
              artifacts:
                - build:
                    source: manifest_data
                    destination: manifest
              inputs:
                - manifest
              tasks:
                - script: |
                    pip install -U outsystems-pipeline==#{os_package_version}
                - script: |
                    mkdir #{manifest_folder}
                    echo %manifest% > "#{manifest_folder}\#{manifest_file}"
      - regression_testing:
          jobs:
            regression_deploy:
#              keep_artifacts: yes
              clean_workspace: yes
              tasks:
                - fetch:
                    stage: setup
                    job: publish_trigger_manifest
                    source: manifest
                    destination: manifest
                - script: |
                    python -m outsystems.pipeline.deploy_tags_to_target_env_with_manifest --lt_url #{lifetime_hostname} --lt_token %lifetime_token% --lt_api_version #{lifetime_api_version} --source_env_label #{development_env_label} --destination_env_label #{regression_env_label} --include_test_apps --manifest_file "manifest\manifest\#{manifest_folder}\#{manifest_file}"
                - script: |
                    python -m outsystems.pipeline.apply_configuration_values_to_target_env --lt_url #{lifetime_hostname} --lt_token %lifetime_token% --target_env_label #{regression_env_label} --manifest_file "manifest\manifest\#{manifest_folder}\#{manifest_file}"
            regression_testing_bdd:
              depends_on: [regression_deploy]
              clean_workspace: yes
              artifacts:
                - test:
                    source: test_report
              tasks:
                - script: |
                    echo '#{bdd_test_manager_url}/rest/v1/TriggerTestRun?JobKey=#{bdd_test_jobs}"&Env="#{regression_env_label}'
                    mkdir test_report

                - exec:
                    command: powershell.exe
                    arguments:
                      - -Command
                      - Invoke-RestMethod -Uri '#{bdd_test_manager_url}/rest/v1/TriggerTestRun?JobKey=#{bdd_test_jobs}&Env=#{regression_env_label}' -TimeoutSec 300 -OutFile "test_report\junit-bdd.#{bdd_test_jobs}.xml"
      - acceptance:
          jobs:
            acceptance_deploy:
              clean_workspace: yes
              tasks:
                - fetch:
                    stage: setup
                    job: publish_trigger_manifest
                    source: manifest
                    destination: manifest
                - script: |
                    python -m outsystems.pipeline.deploy_tags_to_target_env_with_manifest --lt_url #{lifetime_hostname} --lt_token %lifetime_token% --lt_api_version #{lifetime_api_version} --source_env_label #{regression_env_label} --destination_env_label #{acceptance_env_label} --manifest_file "manifest\manifest\#{manifest_folder}\#{manifest_file}"
                - script: |
                    python -m outsystems.pipeline.apply_configuration_values_to_target_env --lt_url #{lifetime_hostname} --lt_token %lifetime_token% --target_env_label #{acceptance_env_label} --manifest_file "manifest\manifest\#{manifest_folder}\#{manifest_file}"
      - dry_run:
          approval:
            type: manual
            allow_only_on_success: true
            users:
              - dmmc
          jobs:
            preprod_deploy:
              clean_workspace: yes
              tasks:
                - fetch:
                    stage: setup
                    job: publish_trigger_manifest
                    source: manifest
                    destination: manifest
                - script: |
                    python -m outsystems.pipeline.deploy_tags_to_target_env_with_manifest --lt_url #{lifetime_hostname} --lt_token %lifetime_token% --lt_api_version #{lifetime_api_version} --source_env_label #{acceptance_env_label} --destination_env_label #{preprod_env_label} --manifest_file "manifest\manifest\#{manifest_folder}\#{manifest_file}"
                - script: |
                    python -m outsystems.pipeline.apply_configuration_values_to_target_env --lt_url #{lifetime_hostname} --lt_token %lifetime_token% --target_env_label #{preprod_env_label} --manifest_file "manifest\manifest\#{manifest_folder}\#{manifest_file}"
      - production:
          jobs:
            production_deploy:
              clean_workspace: yes
              tasks:
                - fetch:
                    stage: setup
                    job: publish_trigger_manifest
                    source: manifest
                    destination: manifest
                - script: |
                    python -m outsystems.pipeline.deploy_tags_to_target_env_with_manifest --lt_url #{lifetime_hostname} --lt_token %lifetime_token% --lt_api_version #{lifetime_api_version} --source_env_label #{preprod_env_label} --destination_env_label #{production_env_label} --manifest_file "manifest\manifest\#{manifest_folder}\#{manifest_file}"
                - script: |
                    python -m outsystems.pipeline.apply_configuration_values_to_target_env --lt_url #{lifetime_hostname} --lt_token %lifetime_token% --target_env_label #{production_env_label} --manifest_file "manifest\manifest\#{manifest_folder}\#{manifest_file}"

#                - script: |
#                    echo "lifetime_hostname param value: #{lifetime_hostname}"
#                - script: |
#                    echo "Manifest (env) input value: %manifest%"
#                - exec:
#                    command: powershell.exe
#                    arguments:
#                      - -Command
#                      - echo 'Manifest input value %manifest%'
#                - script: |
#                    echo "lifetime_token (secret) value: %lifetime_token%"
#                - script: |
#                    pip install -U outsystems-pipeline==#{os_package_version}
#                - script: |
#                    mkdir #{manifest_folder}
#                    echo %manifest% > "#{manifest_folder}\#{manifest_file}"
#                - exec:
#                    command: powershell.exe
#                    arguments:
#                      - -Command
#                      - ('%manifest%') | Out-File -FilePath "#{manifest_folder}\#{manifest_file}" -Encoding default